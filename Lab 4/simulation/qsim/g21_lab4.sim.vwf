/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("card_to_play")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("card_to_play[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("card_to_play[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("card_to_play[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("card_to_play[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("card_to_play[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("card_to_play[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "card_to_play";
}

SIGNAL("play_pile_top_card")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("play_pile_top_card[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("play_pile_top_card[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("play_pile_top_card[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("play_pile_top_card[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("play_pile_top_card[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("play_pile_top_card[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "play_pile_top_card";
}

SIGNAL("legal_play")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("total_value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

SIGNAL("total_value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

SIGNAL("total_value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

SIGNAL("total_value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

SIGNAL("total_value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

SIGNAL("total_value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "total_value";
}

TRANSITION_LIST("card_to_play[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}
TRANSITION_LIST("card_to_play[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}
TRANSITION_LIST("card_to_play[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}
TRANSITION_LIST("card_to_play[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}
TRANSITION_LIST("card_to_play[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}
TRANSITION_LIST("card_to_play[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}
TRANSITION_LIST("play_pile_top_card[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 400.0;
	}
}
TRANSITION_LIST("play_pile_top_card[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 480.0;
		LEVEL 0 FOR 400.0;
	}
}
TRANSITION_LIST("play_pile_top_card[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
	}
}
TRANSITION_LIST("play_pile_top_card[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
	}
}
TRANSITION_LIST("play_pile_top_card[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
	}
}
TRANSITION_LIST("play_pile_top_card[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}
TRANSITION_LIST("legal_play")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 20.029;
		LEVEL 1 FOR 18.273;
		LEVEL X FOR 6.044;
		LEVEL 1 FOR 9955.654;
	}
}
TRANSITION_LIST("total_value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 17.455;
		LEVEL 0 FOR 20.599;
		LEVEL X FOR 3.551;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 232.526;
		LEVEL 1 FOR 4.755;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 204.541;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.095;
		LEVEL 1 FOR 124.616;
		LEVEL 0 FOR 238.51;
		LEVEL 1 FOR 145.62;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 206.077;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 202.526;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 232.526;
		LEVEL 1 FOR 4.755;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 204.541;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.095;
		LEVEL 1 FOR 124.616;
		LEVEL 0 FOR 238.51;
		LEVEL 1 FOR 145.62;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 206.077;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 202.526;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 232.526;
		LEVEL 1 FOR 4.755;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 204.541;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.095;
		LEVEL 1 FOR 124.616;
		LEVEL 0 FOR 238.51;
		LEVEL 1 FOR 145.62;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 206.077;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 202.526;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 232.526;
		LEVEL 1 FOR 4.755;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 204.541;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.095;
		LEVEL 1 FOR 124.616;
		LEVEL 0 FOR 238.51;
		LEVEL 1 FOR 145.62;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 206.077;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 202.526;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 232.526;
		LEVEL 1 FOR 4.755;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 204.541;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.095;
		LEVEL 1 FOR 124.616;
		LEVEL 0 FOR 238.51;
		LEVEL 1 FOR 145.62;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 206.077;
		LEVEL 1 FOR 26.449;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 202.526;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.434;
		LEVEL 1 FOR 122.04;
		LEVEL 0 FOR 204.472;
	}
}
TRANSITION_LIST("total_value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 14.564;
		LEVEL 1 FOR 23.747;
		LEVEL X FOR 4.97;
		LEVEL 1 FOR 153.517;
		LEVEL 0 FOR 204.568;
		LEVEL 1 FOR 32.713;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 177.125;
		LEVEL 1 FOR 183.576;
		LEVEL 0 FOR 201.639;
		LEVEL 1 FOR 182.491;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 177.608;
		LEVEL 1 FOR 182.392;
		LEVEL 0 FOR 177.167;
		LEVEL 1 FOR 182.833;
		LEVEL 0 FOR 204.568;
		LEVEL 1 FOR 32.713;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 177.125;
		LEVEL 1 FOR 183.576;
		LEVEL 0 FOR 201.639;
		LEVEL 1 FOR 182.491;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 177.608;
		LEVEL 1 FOR 182.392;
		LEVEL 0 FOR 177.167;
		LEVEL 1 FOR 182.833;
		LEVEL 0 FOR 204.568;
		LEVEL 1 FOR 32.713;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 177.125;
		LEVEL 1 FOR 183.576;
		LEVEL 0 FOR 201.639;
		LEVEL 1 FOR 182.491;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 177.608;
		LEVEL 1 FOR 182.392;
		LEVEL 0 FOR 177.167;
		LEVEL 1 FOR 182.833;
		LEVEL 0 FOR 204.568;
		LEVEL 1 FOR 32.713;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 177.125;
		LEVEL 1 FOR 183.576;
		LEVEL 0 FOR 201.639;
		LEVEL 1 FOR 182.491;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 177.608;
		LEVEL 1 FOR 182.392;
		LEVEL 0 FOR 177.167;
		LEVEL 1 FOR 182.833;
		LEVEL 0 FOR 204.568;
		LEVEL 1 FOR 32.713;
		LEVEL 0 FOR 5.793;
		LEVEL 1 FOR 143.293;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.169;
		LEVEL 0 FOR 177.125;
		LEVEL 1 FOR 183.576;
		LEVEL 0 FOR 201.639;
		LEVEL 1 FOR 182.491;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 177.608;
		LEVEL 1 FOR 182.392;
		LEVEL 0 FOR 177.167;
		LEVEL 1 FOR 182.833;
		LEVEL 0 FOR 203.202;
	}
}
TRANSITION_LIST("total_value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 18.876;
		LEVEL 0 FOR 19.447;
		LEVEL X FOR 5.295;
		LEVEL 0 FOR 153.632;
		LEVEL 1 FOR 205.161;
		LEVEL 0 FOR 29.679;
		LEVEL 1 FOR 6.913;
		LEVEL 0 FOR 144.614;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.169;
		LEVEL 1 FOR 178.112;
		LEVEL 0 FOR 182.589;
		LEVEL 1 FOR 202.527;
		LEVEL 0 FOR 31.313;
		LEVEL 1 FOR 3.349;
		LEVEL 0 FOR 146.941;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 178.595;
		LEVEL 0 FOR 181.405;
		LEVEL 1 FOR 177.363;
		LEVEL 0 FOR 182.637;
		LEVEL 1 FOR 205.161;
		LEVEL 0 FOR 29.679;
		LEVEL 1 FOR 6.913;
		LEVEL 0 FOR 144.614;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.169;
		LEVEL 1 FOR 178.112;
		LEVEL 0 FOR 182.589;
		LEVEL 1 FOR 202.527;
		LEVEL 0 FOR 31.313;
		LEVEL 1 FOR 3.349;
		LEVEL 0 FOR 146.941;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 178.595;
		LEVEL 0 FOR 181.405;
		LEVEL 1 FOR 177.363;
		LEVEL 0 FOR 182.637;
		LEVEL 1 FOR 205.161;
		LEVEL 0 FOR 29.679;
		LEVEL 1 FOR 6.913;
		LEVEL 0 FOR 144.614;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.169;
		LEVEL 1 FOR 178.112;
		LEVEL 0 FOR 182.589;
		LEVEL 1 FOR 202.527;
		LEVEL 0 FOR 31.313;
		LEVEL 1 FOR 3.349;
		LEVEL 0 FOR 146.941;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 178.595;
		LEVEL 0 FOR 181.405;
		LEVEL 1 FOR 177.363;
		LEVEL 0 FOR 182.637;
		LEVEL 1 FOR 205.161;
		LEVEL 0 FOR 29.679;
		LEVEL 1 FOR 6.913;
		LEVEL 0 FOR 144.614;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.169;
		LEVEL 1 FOR 178.112;
		LEVEL 0 FOR 182.589;
		LEVEL 1 FOR 202.527;
		LEVEL 0 FOR 31.313;
		LEVEL 1 FOR 3.349;
		LEVEL 0 FOR 146.941;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 178.595;
		LEVEL 0 FOR 181.405;
		LEVEL 1 FOR 177.363;
		LEVEL 0 FOR 182.637;
		LEVEL 1 FOR 205.161;
		LEVEL 0 FOR 29.679;
		LEVEL 1 FOR 6.913;
		LEVEL 0 FOR 144.614;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.169;
		LEVEL 1 FOR 178.112;
		LEVEL 0 FOR 182.589;
		LEVEL 1 FOR 202.527;
		LEVEL 0 FOR 31.313;
		LEVEL 1 FOR 3.349;
		LEVEL 0 FOR 146.941;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 178.595;
		LEVEL 0 FOR 181.405;
		LEVEL 1 FOR 177.363;
		LEVEL 0 FOR 182.637;
		LEVEL 1 FOR 202.75;
	}
}
TRANSITION_LIST("total_value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 14.804;
		LEVEL 0 FOR 23.018;
		LEVEL X FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 264.322;
		LEVEL 0 FOR 33.133;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 82.996;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 238.745;
		LEVEL 0 FOR 122.271;
		LEVEL 1 FOR 262.944;
		LEVEL 0 FOR 122.614;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 237.692;
		LEVEL 0 FOR 23.905;
		LEVEL 1 FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 236.921;
		LEVEL 0 FOR 123.079;
		LEVEL 1 FOR 264.322;
		LEVEL 0 FOR 33.133;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 82.996;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 238.745;
		LEVEL 0 FOR 122.271;
		LEVEL 1 FOR 262.944;
		LEVEL 0 FOR 122.614;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 237.692;
		LEVEL 0 FOR 23.905;
		LEVEL 1 FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 236.921;
		LEVEL 0 FOR 123.079;
		LEVEL 1 FOR 264.322;
		LEVEL 0 FOR 33.133;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 82.996;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 238.745;
		LEVEL 0 FOR 122.271;
		LEVEL 1 FOR 262.944;
		LEVEL 0 FOR 122.614;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 237.692;
		LEVEL 0 FOR 23.905;
		LEVEL 1 FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 236.921;
		LEVEL 0 FOR 123.079;
		LEVEL 1 FOR 264.322;
		LEVEL 0 FOR 33.133;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 82.996;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 238.745;
		LEVEL 0 FOR 122.271;
		LEVEL 1 FOR 262.944;
		LEVEL 0 FOR 122.614;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 237.692;
		LEVEL 0 FOR 23.905;
		LEVEL 1 FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 236.921;
		LEVEL 0 FOR 123.079;
		LEVEL 1 FOR 264.322;
		LEVEL 0 FOR 33.133;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 82.996;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 238.745;
		LEVEL 0 FOR 122.271;
		LEVEL 1 FOR 262.944;
		LEVEL 0 FOR 122.614;
		LEVEL 1 FOR 29.436;
		LEVEL 0 FOR 3.99;
		LEVEL 1 FOR 237.692;
		LEVEL 0 FOR 23.905;
		LEVEL 1 FOR 5.941;
		LEVEL 0 FOR 92.792;
		LEVEL 1 FOR 236.921;
		LEVEL 0 FOR 123.079;
		LEVEL 1 FOR 263.445;
	}
}
TRANSITION_LIST("total_value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 18.716;
		LEVEL 0 FOR 19.334;
		LEVEL X FOR 4.389;
		LEVEL 0 FOR 33.587;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 143.904;
		LEVEL 0 FOR 32.526;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 20.948;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 5.392;
		LEVEL 1 FOR 24.608;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 3.43;
		LEVEL 1 FOR 120.297;
		LEVEL 0 FOR 60.489;
		LEVEL 1 FOR 59.214;
		LEVEL 0 FOR 122.544;
		LEVEL 1 FOR 142.968;
		LEVEL 0 FOR 27.637;
		LEVEL 1 FOR 3.218;
		LEVEL 0 FOR 29.104;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 26.367;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 6.004;
		LEVEL 1 FOR 116.67;
		LEVEL 0 FOR 61.881;
		LEVEL 1 FOR 60.082;
		LEVEL 0 FOR 121.093;
		LEVEL 1 FOR 116.503;
		LEVEL 0 FOR 62.322;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 143.904;
		LEVEL 0 FOR 32.526;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 20.948;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 5.392;
		LEVEL 1 FOR 24.608;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 3.43;
		LEVEL 1 FOR 120.297;
		LEVEL 0 FOR 60.489;
		LEVEL 1 FOR 59.214;
		LEVEL 0 FOR 122.544;
		LEVEL 1 FOR 142.968;
		LEVEL 0 FOR 27.637;
		LEVEL 1 FOR 3.218;
		LEVEL 0 FOR 29.104;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 26.367;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 6.004;
		LEVEL 1 FOR 116.67;
		LEVEL 0 FOR 61.881;
		LEVEL 1 FOR 60.082;
		LEVEL 0 FOR 121.093;
		LEVEL 1 FOR 116.503;
		LEVEL 0 FOR 62.322;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 143.904;
		LEVEL 0 FOR 32.526;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 20.948;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 5.392;
		LEVEL 1 FOR 24.608;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 3.43;
		LEVEL 1 FOR 120.297;
		LEVEL 0 FOR 60.489;
		LEVEL 1 FOR 59.214;
		LEVEL 0 FOR 122.544;
		LEVEL 1 FOR 142.968;
		LEVEL 0 FOR 27.637;
		LEVEL 1 FOR 3.218;
		LEVEL 0 FOR 29.104;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 26.367;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 6.004;
		LEVEL 1 FOR 116.67;
		LEVEL 0 FOR 61.881;
		LEVEL 1 FOR 60.082;
		LEVEL 0 FOR 121.093;
		LEVEL 1 FOR 116.503;
		LEVEL 0 FOR 62.322;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 143.904;
		LEVEL 0 FOR 32.526;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 20.948;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 5.392;
		LEVEL 1 FOR 24.608;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 3.43;
		LEVEL 1 FOR 120.297;
		LEVEL 0 FOR 60.489;
		LEVEL 1 FOR 59.214;
		LEVEL 0 FOR 122.544;
		LEVEL 1 FOR 142.968;
		LEVEL 0 FOR 27.637;
		LEVEL 1 FOR 3.218;
		LEVEL 0 FOR 29.104;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 26.367;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 6.004;
		LEVEL 1 FOR 116.67;
		LEVEL 0 FOR 61.881;
		LEVEL 1 FOR 60.082;
		LEVEL 0 FOR 121.093;
		LEVEL 1 FOR 116.503;
		LEVEL 0 FOR 62.322;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 143.904;
		LEVEL 0 FOR 32.526;
		LEVEL 1 FOR 5.793;
		LEVEL 0 FOR 20.948;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 5.392;
		LEVEL 1 FOR 24.608;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 3.43;
		LEVEL 1 FOR 120.297;
		LEVEL 0 FOR 60.489;
		LEVEL 1 FOR 59.214;
		LEVEL 0 FOR 122.544;
		LEVEL 1 FOR 142.968;
		LEVEL 0 FOR 27.637;
		LEVEL 1 FOR 3.218;
		LEVEL 0 FOR 29.104;
		LEVEL 1 FOR 30.896;
		LEVEL 0 FOR 3.633;
		LEVEL 1 FOR 26.367;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 3.633;
		LEVEL 0 FOR 86.367;
		LEVEL 1 FOR 30.203;
		LEVEL 0 FOR 6.004;
		LEVEL 1 FOR 116.67;
		LEVEL 0 FOR 61.881;
		LEVEL 1 FOR 60.082;
		LEVEL 0 FOR 121.093;
		LEVEL 1 FOR 116.503;
		LEVEL 0 FOR 62.322;
		LEVEL 1 FOR 58.875;
		LEVEL 0 FOR 122.3;
		LEVEL 1 FOR 142.799;
	}
}
TRANSITION_LIST("total_value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 13.978;
		LEVEL 0 FOR 26.245;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 86.565;
		LEVEL 0 FOR 28.644;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 125.938;
		LEVEL 0 FOR 20.926;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.452;
		LEVEL 1 FOR 86.904;
		LEVEL 0 FOR 25.711;
		LEVEL 1 FOR 32.933;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 124.885;
		LEVEL 0 FOR 21.979;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 59.005;
		LEVEL 0 FOR 26.204;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 86.565;
		LEVEL 0 FOR 28.644;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 125.938;
		LEVEL 0 FOR 20.926;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.452;
		LEVEL 1 FOR 86.904;
		LEVEL 0 FOR 25.711;
		LEVEL 1 FOR 32.933;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 124.885;
		LEVEL 0 FOR 21.979;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 59.005;
		LEVEL 0 FOR 26.204;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 86.565;
		LEVEL 0 FOR 28.644;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 125.938;
		LEVEL 0 FOR 20.926;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.452;
		LEVEL 1 FOR 86.904;
		LEVEL 0 FOR 25.711;
		LEVEL 1 FOR 32.933;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 124.885;
		LEVEL 0 FOR 21.979;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 59.005;
		LEVEL 0 FOR 26.204;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 86.565;
		LEVEL 0 FOR 28.644;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 125.938;
		LEVEL 0 FOR 20.926;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.452;
		LEVEL 1 FOR 86.904;
		LEVEL 0 FOR 25.711;
		LEVEL 1 FOR 32.933;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 124.885;
		LEVEL 0 FOR 21.979;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 59.005;
		LEVEL 0 FOR 26.204;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 86.565;
		LEVEL 0 FOR 28.644;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 125.938;
		LEVEL 0 FOR 20.926;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.452;
		LEVEL 1 FOR 86.904;
		LEVEL 0 FOR 25.711;
		LEVEL 1 FOR 32.933;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.203;
		LEVEL 1 FOR 124.885;
		LEVEL 0 FOR 21.979;
		LEVEL 1 FOR 32.459;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 59.005;
		LEVEL 0 FOR 26.204;
		LEVEL 1 FOR 29.526;
		LEVEL 0 FOR 30.474;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 84.986;
	}
}


DISPLAY_LINE
{
	CHANNEL = "card_to_play";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "card_to_play[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "play_pile_top_card[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "legal_play";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "total_value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "total_value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
