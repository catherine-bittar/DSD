// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/17/2017 13:27:16"

// 
// Device: Altera EP2C20F484C7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module g21_dealer_FSM (
	Request_Deal,
	reset,
	Clock,
	Rand_Enable);
input 	Request_Deal;
input 	reset;
input 	Clock;
output 	Rand_Enable;

// Design Ports Information
// Rand_Enable	=>  Location: PIN_W1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// Request_Deal	=>  Location: PIN_W2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// Clock	=>  Location: PIN_Y2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// reset	=>  Location: PIN_Y1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("g21_lab4_v_fast.sdo");
// synopsys translate_on

wire \Clock~combout ;
wire \Request_Deal~combout ;
wire \Rand_Enable~reg0feeder_combout ;
wire \reset~combout ;
wire \Rand_Enable~reg0_regout ;


// Location: PIN_Y2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cycloneii_io \Clock~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Clock~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Clock));
// synopsys translate_off
defparam \Clock~I .input_async_reset = "none";
defparam \Clock~I .input_power_up = "low";
defparam \Clock~I .input_register_mode = "none";
defparam \Clock~I .input_sync_reset = "none";
defparam \Clock~I .oe_async_reset = "none";
defparam \Clock~I .oe_power_up = "low";
defparam \Clock~I .oe_register_mode = "none";
defparam \Clock~I .oe_sync_reset = "none";
defparam \Clock~I .operation_mode = "input";
defparam \Clock~I .output_async_reset = "none";
defparam \Clock~I .output_power_up = "low";
defparam \Clock~I .output_register_mode = "none";
defparam \Clock~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_W2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cycloneii_io \Request_Deal~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Request_Deal~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Request_Deal));
// synopsys translate_off
defparam \Request_Deal~I .input_async_reset = "none";
defparam \Request_Deal~I .input_power_up = "low";
defparam \Request_Deal~I .input_register_mode = "none";
defparam \Request_Deal~I .input_sync_reset = "none";
defparam \Request_Deal~I .oe_async_reset = "none";
defparam \Request_Deal~I .oe_power_up = "low";
defparam \Request_Deal~I .oe_register_mode = "none";
defparam \Request_Deal~I .oe_sync_reset = "none";
defparam \Request_Deal~I .operation_mode = "input";
defparam \Request_Deal~I .output_async_reset = "none";
defparam \Request_Deal~I .output_power_up = "low";
defparam \Request_Deal~I .output_register_mode = "none";
defparam \Request_Deal~I .output_sync_reset = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneii_lcell_comb \Rand_Enable~reg0feeder (
// Equation(s):
// \Rand_Enable~reg0feeder_combout  = \Request_Deal~combout 

	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Request_Deal~combout ),
	.cin(gnd),
	.combout(\Rand_Enable~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \Rand_Enable~reg0feeder .lut_mask = 16'hFF00;
defparam \Rand_Enable~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: PIN_Y1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cycloneii_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\reset~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .input_async_reset = "none";
defparam \reset~I .input_power_up = "low";
defparam \reset~I .input_register_mode = "none";
defparam \reset~I .input_sync_reset = "none";
defparam \reset~I .oe_async_reset = "none";
defparam \reset~I .oe_power_up = "low";
defparam \reset~I .oe_register_mode = "none";
defparam \reset~I .oe_sync_reset = "none";
defparam \reset~I .operation_mode = "input";
defparam \reset~I .output_async_reset = "none";
defparam \reset~I .output_power_up = "low";
defparam \reset~I .output_register_mode = "none";
defparam \reset~I .output_sync_reset = "none";
// synopsys translate_on

// Location: LCFF_X1_Y4_N25
cycloneii_lcell_ff \Rand_Enable~reg0 (
	.clk(\Clock~combout ),
	.datain(\Rand_Enable~reg0feeder_combout ),
	.sdata(gnd),
	.aclr(\reset~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\Rand_Enable~reg0_regout ));

// Location: PIN_W1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \Rand_Enable~I (
	.datain(\Rand_Enable~reg0_regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Rand_Enable));
// synopsys translate_off
defparam \Rand_Enable~I .input_async_reset = "none";
defparam \Rand_Enable~I .input_power_up = "low";
defparam \Rand_Enable~I .input_register_mode = "none";
defparam \Rand_Enable~I .input_sync_reset = "none";
defparam \Rand_Enable~I .oe_async_reset = "none";
defparam \Rand_Enable~I .oe_power_up = "low";
defparam \Rand_Enable~I .oe_register_mode = "none";
defparam \Rand_Enable~I .oe_sync_reset = "none";
defparam \Rand_Enable~I .operation_mode = "output";
defparam \Rand_Enable~I .output_async_reset = "none";
defparam \Rand_Enable~I .output_power_up = "low";
defparam \Rand_Enable~I .output_register_mode = "none";
defparam \Rand_Enable~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
